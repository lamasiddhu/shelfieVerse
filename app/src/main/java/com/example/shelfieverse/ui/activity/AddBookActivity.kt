package com.example.shelfieverse.ui.activity

import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.runtime.*
import androidx.core.view.WindowCompat
import com.example.shelfieverse.ViewModel.BookViewModel
import com.example.shelfieverse.model.BookModel
import com.example.shelfieverse.repository.BookRepositoryImp
import com.example.shelfieverse.ui.screen.AddBookScreen
import com.example.shelfieverse.ui.screen.BookData
import com.example.shelfieverse.ui.theme.BooktokTheme

class AddBookActivity : ComponentActivity() {
    private lateinit var bookViewModel: BookViewModel

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()

        // Initialize ViewModel
        val repo = BookRepositoryImp()
        bookViewModel = BookViewModel(repo)

        // Configure window for edge-to-edge display
        WindowCompat.setDecorFitsSystemWindows(window, false)

        setContent {
            BooktokTheme {
                AddBookScreenContainer()
            }
        }
    }

    @Composable
    private fun AddBookScreenContainer() {
        var isLoading by remember { mutableStateOf(false) }

        AddBookScreen(
            onBackClick = {
                finish()
            },
            onAddBookClick = { bookData ->
                handleAddBook(bookData) { loading ->
                    isLoading = loading
                }
            },
            isLoading = isLoading
        )
    }

    private fun handleAddBook(bookData: BookData, onLoadingChange: (Boolean) -> Unit) {
        // Validate required fields
        if (bookData.name.isBlank() || bookData.description.isBlank()) {
            Toast.makeText(this, "Please fill all required fields", Toast.LENGTH_SHORT).show()
            return
        }

        onLoadingChange(true)

        // For now, we'll create a book without image upload (since internet isn't working)
        // When Firebase works, you can add back the image upload functionality
        addBookToDatabase(bookData, "", onLoadingChange)
    }

    private fun addBookToDatabase(bookData: BookData, imageUrl: String, onLoadingChange: (Boolean) -> Unit) {
        val bookModel = BookModel(
            BookId = "", // Will be generated by Firebase
            BookName = bookData.name,
            description = bookData.description,
            ageRating = bookData.ageRating,
            releaseYear = bookData.releaseYear,
            imageUrl = imageUrl.ifEmpty { "https://via.placeholder.com/300x400?text=Book+Cover" }, // Placeholder image

        )

        bookViewModel.addBook(bookModel) { success, message ->
            onLoadingChange(false)

            if (success) {
                Toast.makeText(this@AddBookActivity, message, Toast.LENGTH_LONG).show()
                finish() // Go back to previous screen
            } else {
                Toast.makeText(this@AddBookActivity, message, Toast.LENGTH_LONG).show()
            }
        }
    }


}